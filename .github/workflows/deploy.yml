name: Deploy Admin Components

on:
  push:
    branches:
      - main  # ✅ Runs when pushing to main branch
  workflow_dispatch:  # ✅ Allows manual trigger

permissions:
  contents: write
  packages: write

concurrency:
  group: deploy
  cancel-in-progress: true  # Prevents parallel runs on new commits

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js & Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
          registry-url: "https://npm.pkg.github.com"

      - name: Authenticate with GitHub npm Registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build Project
        run: yarn build

      - name: Deploy `admin-components.js` to GitHub Pages (CDN)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch existing gh-pages branch if it exists
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git checkout gh-pages

          # Remove all existing files
          git rm -rf .

          # Copy only the required file
          cp dist/admin-components.js .

          # Commit and push the new file
          git add admin-components.js
          git commit -m "Deploy admin-components.js to GitHub Pages"
          git push origin gh-pages --force

      - name: Publish to GitHub npm Registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION=$(yarn version --patch --no-git-tag-version --silent)
          git add package.json
          git commit -m "Release version $NEW_VERSION [skip ci]"
          git push origin main
          yarn publish --access public
